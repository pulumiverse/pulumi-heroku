# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetMembersMemberResult',
]

@pulumi.output_type
class GetMembersMemberResult(dict):
    def __init__(__self__, *,
                 email: str,
                 federated: bool,
                 role: str,
                 team_member_id: str,
                 two_factor_authentication: bool,
                 user_id: str):
        """
        :param str email: Email address of the team member.
        :param bool federated: Whether the user is federated and belongs to an Identity Provider.
        :param str role: Role in the team.
        :param str team_member_id: Unique identifier of the team member on the team.
        :param bool two_factor_authentication: Whether the Enterprise team member has two-factor authentication enabled.
        :param str user_id: Unique identifier of the team member. This is the member's user ID in Heroku.
        """
        pulumi.set(__self__, "email", email)
        pulumi.set(__self__, "federated", federated)
        pulumi.set(__self__, "role", role)
        pulumi.set(__self__, "team_member_id", team_member_id)
        pulumi.set(__self__, "two_factor_authentication", two_factor_authentication)
        pulumi.set(__self__, "user_id", user_id)

    @property
    @pulumi.getter
    def email(self) -> str:
        """
        Email address of the team member.
        """
        return pulumi.get(self, "email")

    @property
    @pulumi.getter
    def federated(self) -> bool:
        """
        Whether the user is federated and belongs to an Identity Provider.
        """
        return pulumi.get(self, "federated")

    @property
    @pulumi.getter
    def role(self) -> str:
        """
        Role in the team.
        """
        return pulumi.get(self, "role")

    @property
    @pulumi.getter(name="teamMemberId")
    def team_member_id(self) -> str:
        """
        Unique identifier of the team member on the team.
        """
        return pulumi.get(self, "team_member_id")

    @property
    @pulumi.getter(name="twoFactorAuthentication")
    def two_factor_authentication(self) -> bool:
        """
        Whether the Enterprise team member has two-factor authentication enabled.
        """
        return pulumi.get(self, "two_factor_authentication")

    @property
    @pulumi.getter(name="userId")
    def user_id(self) -> str:
        """
        Unique identifier of the team member. This is the member's user ID in Heroku.
        """
        return pulumi.get(self, "user_id")


