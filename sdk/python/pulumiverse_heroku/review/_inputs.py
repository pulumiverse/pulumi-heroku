# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'AppConfigDeployTargetArgs',
    'AppConfigDeployTargetArgsDict',
]

MYPY = False

if not MYPY:
    class AppConfigDeployTargetArgsDict(TypedDict):
        id: pulumi.Input[str]
        """
        Unique identifier of deploy target.
        """
        type: pulumi.Input[str]
        """
        Type of deploy target. Must be either `space` or `region`.
        """
elif False:
    AppConfigDeployTargetArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class AppConfigDeployTargetArgs:
    def __init__(__self__, *,
                 id: pulumi.Input[str],
                 type: pulumi.Input[str]):
        """
        :param pulumi.Input[str] id: Unique identifier of deploy target.
        :param pulumi.Input[str] type: Type of deploy target. Must be either `space` or `region`.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def id(self) -> pulumi.Input[str]:
        """
        Unique identifier of deploy target.
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: pulumi.Input[str]):
        pulumi.set(self, "id", value)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        Type of deploy target. Must be either `space` or `region`.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)


