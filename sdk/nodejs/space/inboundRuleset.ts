// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource for managing [inbound rulesets](https://devcenter.heroku.com/articles/platform-api-reference#inbound-ruleset) for Heroku Private Spaces.
 *
 * ## Example Usage
 */
export class InboundRuleset extends pulumi.CustomResource {
    /**
     * Get an existing InboundRuleset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InboundRulesetState, opts?: pulumi.CustomResourceOptions): InboundRuleset {
        return new InboundRuleset(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'heroku:space/inboundRuleset:InboundRuleset';

    /**
     * Returns true if the given object is an instance of InboundRuleset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InboundRuleset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InboundRuleset.__pulumiType;
    }

    /**
     * At least one `rule` block. Rules are documented below.
     */
    public readonly rules!: pulumi.Output<outputs.space.InboundRulesetRule[]>;
    /**
     * The ID of the space.
     */
    public readonly space!: pulumi.Output<string>;

    /**
     * Create a InboundRuleset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InboundRulesetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InboundRulesetArgs | InboundRulesetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InboundRulesetState | undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["space"] = state ? state.space : undefined;
        } else {
            const args = argsOrState as InboundRulesetArgs | undefined;
            if ((!args || args.rules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rules'");
            }
            if ((!args || args.space === undefined) && !opts.urn) {
                throw new Error("Missing required property 'space'");
            }
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["space"] = args ? args.space : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InboundRuleset.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering InboundRuleset resources.
 */
export interface InboundRulesetState {
    /**
     * At least one `rule` block. Rules are documented below.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.space.InboundRulesetRule>[]>;
    /**
     * The ID of the space.
     */
    space?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InboundRuleset resource.
 */
export interface InboundRulesetArgs {
    /**
     * At least one `rule` block. Rules are documented below.
     */
    rules: pulumi.Input<pulumi.Input<inputs.space.InboundRulesetRule>[]>;
    /**
     * The ID of the space.
     */
    space: pulumi.Input<string>;
}
