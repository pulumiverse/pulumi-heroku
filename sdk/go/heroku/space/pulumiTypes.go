// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package space

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-heroku/sdk/go/heroku/internal"
)

var _ = internal.GetEnvOrDefault

type InboundRulesetRule struct {
	Action string `pulumi:"action"`
	Source string `pulumi:"source"`
}

// InboundRulesetRuleInput is an input type that accepts InboundRulesetRuleArgs and InboundRulesetRuleOutput values.
// You can construct a concrete instance of `InboundRulesetRuleInput` via:
//
//	InboundRulesetRuleArgs{...}
type InboundRulesetRuleInput interface {
	pulumi.Input

	ToInboundRulesetRuleOutput() InboundRulesetRuleOutput
	ToInboundRulesetRuleOutputWithContext(context.Context) InboundRulesetRuleOutput
}

type InboundRulesetRuleArgs struct {
	Action pulumi.StringInput `pulumi:"action"`
	Source pulumi.StringInput `pulumi:"source"`
}

func (InboundRulesetRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundRulesetRule)(nil)).Elem()
}

func (i InboundRulesetRuleArgs) ToInboundRulesetRuleOutput() InboundRulesetRuleOutput {
	return i.ToInboundRulesetRuleOutputWithContext(context.Background())
}

func (i InboundRulesetRuleArgs) ToInboundRulesetRuleOutputWithContext(ctx context.Context) InboundRulesetRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundRulesetRuleOutput)
}

// InboundRulesetRuleArrayInput is an input type that accepts InboundRulesetRuleArray and InboundRulesetRuleArrayOutput values.
// You can construct a concrete instance of `InboundRulesetRuleArrayInput` via:
//
//	InboundRulesetRuleArray{ InboundRulesetRuleArgs{...} }
type InboundRulesetRuleArrayInput interface {
	pulumi.Input

	ToInboundRulesetRuleArrayOutput() InboundRulesetRuleArrayOutput
	ToInboundRulesetRuleArrayOutputWithContext(context.Context) InboundRulesetRuleArrayOutput
}

type InboundRulesetRuleArray []InboundRulesetRuleInput

func (InboundRulesetRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundRulesetRule)(nil)).Elem()
}

func (i InboundRulesetRuleArray) ToInboundRulesetRuleArrayOutput() InboundRulesetRuleArrayOutput {
	return i.ToInboundRulesetRuleArrayOutputWithContext(context.Background())
}

func (i InboundRulesetRuleArray) ToInboundRulesetRuleArrayOutputWithContext(ctx context.Context) InboundRulesetRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundRulesetRuleArrayOutput)
}

type InboundRulesetRuleOutput struct{ *pulumi.OutputState }

func (InboundRulesetRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundRulesetRule)(nil)).Elem()
}

func (o InboundRulesetRuleOutput) ToInboundRulesetRuleOutput() InboundRulesetRuleOutput {
	return o
}

func (o InboundRulesetRuleOutput) ToInboundRulesetRuleOutputWithContext(ctx context.Context) InboundRulesetRuleOutput {
	return o
}

func (o InboundRulesetRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v InboundRulesetRule) string { return v.Action }).(pulumi.StringOutput)
}

func (o InboundRulesetRuleOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v InboundRulesetRule) string { return v.Source }).(pulumi.StringOutput)
}

type InboundRulesetRuleArrayOutput struct{ *pulumi.OutputState }

func (InboundRulesetRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundRulesetRule)(nil)).Elem()
}

func (o InboundRulesetRuleArrayOutput) ToInboundRulesetRuleArrayOutput() InboundRulesetRuleArrayOutput {
	return o
}

func (o InboundRulesetRuleArrayOutput) ToInboundRulesetRuleArrayOutputWithContext(ctx context.Context) InboundRulesetRuleArrayOutput {
	return o
}

func (o InboundRulesetRuleArrayOutput) Index(i pulumi.IntInput) InboundRulesetRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundRulesetRule {
		return vs[0].([]InboundRulesetRule)[vs[1].(int)]
	}).(InboundRulesetRuleOutput)
}

type VpnConnectionTunnel struct {
	Ip           *string `pulumi:"ip"`
	PreSharedKey *string `pulumi:"preSharedKey"`
}

// VpnConnectionTunnelInput is an input type that accepts VpnConnectionTunnelArgs and VpnConnectionTunnelOutput values.
// You can construct a concrete instance of `VpnConnectionTunnelInput` via:
//
//	VpnConnectionTunnelArgs{...}
type VpnConnectionTunnelInput interface {
	pulumi.Input

	ToVpnConnectionTunnelOutput() VpnConnectionTunnelOutput
	ToVpnConnectionTunnelOutputWithContext(context.Context) VpnConnectionTunnelOutput
}

type VpnConnectionTunnelArgs struct {
	Ip           pulumi.StringPtrInput `pulumi:"ip"`
	PreSharedKey pulumi.StringPtrInput `pulumi:"preSharedKey"`
}

func (VpnConnectionTunnelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionTunnel)(nil)).Elem()
}

func (i VpnConnectionTunnelArgs) ToVpnConnectionTunnelOutput() VpnConnectionTunnelOutput {
	return i.ToVpnConnectionTunnelOutputWithContext(context.Background())
}

func (i VpnConnectionTunnelArgs) ToVpnConnectionTunnelOutputWithContext(ctx context.Context) VpnConnectionTunnelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionTunnelOutput)
}

// VpnConnectionTunnelArrayInput is an input type that accepts VpnConnectionTunnelArray and VpnConnectionTunnelArrayOutput values.
// You can construct a concrete instance of `VpnConnectionTunnelArrayInput` via:
//
//	VpnConnectionTunnelArray{ VpnConnectionTunnelArgs{...} }
type VpnConnectionTunnelArrayInput interface {
	pulumi.Input

	ToVpnConnectionTunnelArrayOutput() VpnConnectionTunnelArrayOutput
	ToVpnConnectionTunnelArrayOutputWithContext(context.Context) VpnConnectionTunnelArrayOutput
}

type VpnConnectionTunnelArray []VpnConnectionTunnelInput

func (VpnConnectionTunnelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionTunnel)(nil)).Elem()
}

func (i VpnConnectionTunnelArray) ToVpnConnectionTunnelArrayOutput() VpnConnectionTunnelArrayOutput {
	return i.ToVpnConnectionTunnelArrayOutputWithContext(context.Background())
}

func (i VpnConnectionTunnelArray) ToVpnConnectionTunnelArrayOutputWithContext(ctx context.Context) VpnConnectionTunnelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionTunnelArrayOutput)
}

type VpnConnectionTunnelOutput struct{ *pulumi.OutputState }

func (VpnConnectionTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionTunnel)(nil)).Elem()
}

func (o VpnConnectionTunnelOutput) ToVpnConnectionTunnelOutput() VpnConnectionTunnelOutput {
	return o
}

func (o VpnConnectionTunnelOutput) ToVpnConnectionTunnelOutputWithContext(ctx context.Context) VpnConnectionTunnelOutput {
	return o
}

func (o VpnConnectionTunnelOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionTunnel) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o VpnConnectionTunnelOutput) PreSharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionTunnel) *string { return v.PreSharedKey }).(pulumi.StringPtrOutput)
}

type VpnConnectionTunnelArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionTunnelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionTunnel)(nil)).Elem()
}

func (o VpnConnectionTunnelArrayOutput) ToVpnConnectionTunnelArrayOutput() VpnConnectionTunnelArrayOutput {
	return o
}

func (o VpnConnectionTunnelArrayOutput) ToVpnConnectionTunnelArrayOutputWithContext(ctx context.Context) VpnConnectionTunnelArrayOutput {
	return o
}

func (o VpnConnectionTunnelArrayOutput) Index(i pulumi.IntInput) VpnConnectionTunnelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionTunnel {
		return vs[0].([]VpnConnectionTunnel)[vs[1].(int)]
	}).(VpnConnectionTunnelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InboundRulesetRuleInput)(nil)).Elem(), InboundRulesetRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InboundRulesetRuleArrayInput)(nil)).Elem(), InboundRulesetRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionTunnelInput)(nil)).Elem(), VpnConnectionTunnelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionTunnelArrayInput)(nil)).Elem(), VpnConnectionTunnelArray{})
	pulumi.RegisterOutputType(InboundRulesetRuleOutput{})
	pulumi.RegisterOutputType(InboundRulesetRuleArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionTunnelOutput{})
	pulumi.RegisterOutputType(VpnConnectionTunnelArrayOutput{})
}
