// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package space

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-heroku/sdk/go/heroku/internal"
)

func GetPeeringInfo(ctx *pulumi.Context, args *GetPeeringInfoArgs, opts ...pulumi.InvokeOption) (*GetPeeringInfoResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPeeringInfoResult
	err := ctx.Invoke("heroku:space/getPeeringInfo:getPeeringInfo", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPeeringInfo.
type GetPeeringInfoArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by getPeeringInfo.
type GetPeeringInfoResult struct {
	AwsAccountId   string   `pulumi:"awsAccountId"`
	AwsRegion      string   `pulumi:"awsRegion"`
	DynoCidrBlocks []string `pulumi:"dynoCidrBlocks"`
	// The provider-assigned unique ID for this managed resource.
	Id                    string   `pulumi:"id"`
	Name                  string   `pulumi:"name"`
	UnavailableCidrBlocks []string `pulumi:"unavailableCidrBlocks"`
	VpcCidr               string   `pulumi:"vpcCidr"`
	VpcId                 string   `pulumi:"vpcId"`
}

func GetPeeringInfoOutput(ctx *pulumi.Context, args GetPeeringInfoOutputArgs, opts ...pulumi.InvokeOption) GetPeeringInfoResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPeeringInfoResult, error) {
			args := v.(GetPeeringInfoArgs)
			r, err := GetPeeringInfo(ctx, &args, opts...)
			var s GetPeeringInfoResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPeeringInfoResultOutput)
}

// A collection of arguments for invoking getPeeringInfo.
type GetPeeringInfoOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPeeringInfoOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringInfoArgs)(nil)).Elem()
}

// A collection of values returned by getPeeringInfo.
type GetPeeringInfoResultOutput struct{ *pulumi.OutputState }

func (GetPeeringInfoResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringInfoResult)(nil)).Elem()
}

func (o GetPeeringInfoResultOutput) ToGetPeeringInfoResultOutput() GetPeeringInfoResultOutput {
	return o
}

func (o GetPeeringInfoResultOutput) ToGetPeeringInfoResultOutputWithContext(ctx context.Context) GetPeeringInfoResultOutput {
	return o
}

func (o GetPeeringInfoResultOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringInfoResult) string { return v.AwsAccountId }).(pulumi.StringOutput)
}

func (o GetPeeringInfoResultOutput) AwsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringInfoResult) string { return v.AwsRegion }).(pulumi.StringOutput)
}

func (o GetPeeringInfoResultOutput) DynoCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPeeringInfoResult) []string { return v.DynoCidrBlocks }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPeeringInfoResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringInfoResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPeeringInfoResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringInfoResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPeeringInfoResultOutput) UnavailableCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPeeringInfoResult) []string { return v.UnavailableCidrBlocks }).(pulumi.StringArrayOutput)
}

func (o GetPeeringInfoResultOutput) VpcCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringInfoResult) string { return v.VpcCidr }).(pulumi.StringOutput)
}

func (o GetPeeringInfoResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringInfoResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPeeringInfoResultOutput{})
}
