// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package space

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-heroku/sdk/go/heroku/internal"
)

func LookupSpace(ctx *pulumi.Context, args *LookupSpaceArgs, opts ...pulumi.InvokeOption) (*LookupSpaceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSpaceResult
	err := ctx.Invoke("heroku:space/getSpace:getSpace", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSpace.
type LookupSpaceArgs struct {
	Cidr     *string `pulumi:"cidr"`
	DataCidr *string `pulumi:"dataCidr"`
	Name     string  `pulumi:"name"`
}

// A collection of values returned by getSpace.
type LookupSpaceResult struct {
	Cidr     string `pulumi:"cidr"`
	DataCidr string `pulumi:"dataCidr"`
	// The provider-assigned unique ID for this managed resource.
	Id           string   `pulumi:"id"`
	Name         string   `pulumi:"name"`
	Organization string   `pulumi:"organization"`
	OutboundIps  []string `pulumi:"outboundIps"`
	Region       string   `pulumi:"region"`
	Shield       bool     `pulumi:"shield"`
	State        string   `pulumi:"state"`
}

func LookupSpaceOutput(ctx *pulumi.Context, args LookupSpaceOutputArgs, opts ...pulumi.InvokeOption) LookupSpaceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSpaceResult, error) {
			args := v.(LookupSpaceArgs)
			r, err := LookupSpace(ctx, &args, opts...)
			var s LookupSpaceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSpaceResultOutput)
}

// A collection of arguments for invoking getSpace.
type LookupSpaceOutputArgs struct {
	Cidr     pulumi.StringPtrInput `pulumi:"cidr"`
	DataCidr pulumi.StringPtrInput `pulumi:"dataCidr"`
	Name     pulumi.StringInput    `pulumi:"name"`
}

func (LookupSpaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSpaceArgs)(nil)).Elem()
}

// A collection of values returned by getSpace.
type LookupSpaceResultOutput struct{ *pulumi.OutputState }

func (LookupSpaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSpaceResult)(nil)).Elem()
}

func (o LookupSpaceResultOutput) ToLookupSpaceResultOutput() LookupSpaceResultOutput {
	return o
}

func (o LookupSpaceResultOutput) ToLookupSpaceResultOutputWithContext(ctx context.Context) LookupSpaceResultOutput {
	return o
}

func (o LookupSpaceResultOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpaceResult) string { return v.Cidr }).(pulumi.StringOutput)
}

func (o LookupSpaceResultOutput) DataCidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpaceResult) string { return v.DataCidr }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSpaceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpaceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSpaceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpaceResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSpaceResultOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpaceResult) string { return v.Organization }).(pulumi.StringOutput)
}

func (o LookupSpaceResultOutput) OutboundIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSpaceResult) []string { return v.OutboundIps }).(pulumi.StringArrayOutput)
}

func (o LookupSpaceResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpaceResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupSpaceResultOutput) Shield() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSpaceResult) bool { return v.Shield }).(pulumi.BoolOutput)
}

func (o LookupSpaceResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpaceResult) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSpaceResultOutput{})
}
