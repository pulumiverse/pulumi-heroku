// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Heroku.Space
{
    /// <summary>
    /// Provides a resource for accepting VPC peering requests to Heroku Private Spaces.
    /// 
    /// ## Example Usage
    /// </summary>
    [HerokuResourceType("heroku:space/peeringConnectionAccepter:PeeringConnectionAccepter")]
    public partial class PeeringConnectionAccepter : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the space.
        /// </summary>
        [Output("space")]
        public Output<string> Space { get; private set; } = null!;

        /// <summary>
        /// The status of the peering connection request.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The type of the peering connection.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The peering connection request ID.
        /// </summary>
        [Output("vpcPeeringConnectionId")]
        public Output<string> VpcPeeringConnectionId { get; private set; } = null!;


        /// <summary>
        /// Create a PeeringConnectionAccepter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PeeringConnectionAccepter(string name, PeeringConnectionAccepterArgs args, CustomResourceOptions? options = null)
            : base("heroku:space/peeringConnectionAccepter:PeeringConnectionAccepter", name, args ?? new PeeringConnectionAccepterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PeeringConnectionAccepter(string name, Input<string> id, PeeringConnectionAccepterState? state = null, CustomResourceOptions? options = null)
            : base("heroku:space/peeringConnectionAccepter:PeeringConnectionAccepter", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PeeringConnectionAccepter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PeeringConnectionAccepter Get(string name, Input<string> id, PeeringConnectionAccepterState? state = null, CustomResourceOptions? options = null)
        {
            return new PeeringConnectionAccepter(name, id, state, options);
        }
    }

    public sealed class PeeringConnectionAccepterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the space.
        /// </summary>
        [Input("space", required: true)]
        public Input<string> Space { get; set; } = null!;

        /// <summary>
        /// The peering connection request ID.
        /// </summary>
        [Input("vpcPeeringConnectionId", required: true)]
        public Input<string> VpcPeeringConnectionId { get; set; } = null!;

        public PeeringConnectionAccepterArgs()
        {
        }
        public static new PeeringConnectionAccepterArgs Empty => new PeeringConnectionAccepterArgs();
    }

    public sealed class PeeringConnectionAccepterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the space.
        /// </summary>
        [Input("space")]
        public Input<string>? Space { get; set; }

        /// <summary>
        /// The status of the peering connection request.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The type of the peering connection.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The peering connection request ID.
        /// </summary>
        [Input("vpcPeeringConnectionId")]
        public Input<string>? VpcPeeringConnectionId { get; set; }

        public PeeringConnectionAccepterState()
        {
        }
        public static new PeeringConnectionAccepterState Empty => new PeeringConnectionAccepterState();
    }
}
