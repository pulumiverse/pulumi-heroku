// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Heroku.Team
{
    public static class GetMembers
    {
        /// <summary>
        /// Use this data source to get information about members for a Heroku Team.
        /// 
        /// ## Example Usage
        /// 
        /// ```hcl-terraform
        /// data "heroku_team_members" "foobar" {
        ///   team = "name_of_my_heroku_team"
        ///   roles = ["admin", "member", "viewer", "collaborator"]
        /// }
        /// ```
        /// </summary>
        public static Task<GetMembersResult> InvokeAsync(GetMembersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMembersResult>("heroku:team/getMembers:getMembers", args ?? new GetMembersArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about members for a Heroku Team.
        /// 
        /// ## Example Usage
        /// 
        /// ```hcl-terraform
        /// data "heroku_team_members" "foobar" {
        ///   team = "name_of_my_heroku_team"
        ///   roles = ["admin", "member", "viewer", "collaborator"]
        /// }
        /// ```
        /// </summary>
        public static Output<GetMembersResult> Invoke(GetMembersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMembersResult>("heroku:team/getMembers:getMembers", args ?? new GetMembersInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about members for a Heroku Team.
        /// 
        /// ## Example Usage
        /// 
        /// ```hcl-terraform
        /// data "heroku_team_members" "foobar" {
        ///   team = "name_of_my_heroku_team"
        ///   roles = ["admin", "member", "viewer", "collaborator"]
        /// }
        /// ```
        /// </summary>
        public static Output<GetMembersResult> Invoke(GetMembersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMembersResult>("heroku:team/getMembers:getMembers", args ?? new GetMembersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMembersArgs : global::Pulumi.InvokeArgs
    {
        [Input("roles", required: true)]
        private List<string>? _roles;

        /// <summary>
        /// List of roles. Acceptable values are `admin`, `member`, `viewer`, `collaborator`, `owner`.
        /// At least one role must be specified.
        /// </summary>
        public List<string> Roles
        {
            get => _roles ?? (_roles = new List<string>());
            set => _roles = value;
        }

        /// <summary>
        /// The team name.
        /// </summary>
        [Input("team", required: true)]
        public string Team { get; set; } = null!;

        public GetMembersArgs()
        {
        }
        public static new GetMembersArgs Empty => new GetMembersArgs();
    }

    public sealed class GetMembersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("roles", required: true)]
        private InputList<string>? _roles;

        /// <summary>
        /// List of roles. Acceptable values are `admin`, `member`, `viewer`, `collaborator`, `owner`.
        /// At least one role must be specified.
        /// </summary>
        public InputList<string> Roles
        {
            get => _roles ?? (_roles = new InputList<string>());
            set => _roles = value;
        }

        /// <summary>
        /// The team name.
        /// </summary>
        [Input("team", required: true)]
        public Input<string> Team { get; set; } = null!;

        public GetMembersInvokeArgs()
        {
        }
        public static new GetMembersInvokeArgs Empty => new GetMembersInvokeArgs();
    }


    [OutputType]
    public sealed class GetMembersResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// All members of the team that have a specified role defined in the `roles` attribute above.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMembersMemberResult> Members;
        public readonly ImmutableArray<string> Roles;
        public readonly string Team;

        [OutputConstructor]
        private GetMembersResult(
            string id,

            ImmutableArray<Outputs.GetMembersMemberResult> members,

            ImmutableArray<string> roles,

            string team)
        {
            Id = id;
            Members = members;
            Roles = roles;
            Team = team;
        }
    }
}
