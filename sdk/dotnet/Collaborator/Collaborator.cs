// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Heroku.Collaborator
{
    /// <summary>
    /// A [Heroku Collaborator](https://devcenter.heroku.com/articles/platform-api-reference#collaborator)
    /// receives access to a specific app that is not owned by a team.
    /// 
    /// &gt; **IMPORTANT!:**
    /// This resource only works for apps that are not part of a team.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Collaborators can be imported using the combination of the application name, a colon, and the collaborator's email address
    /// 
    /// For example:
    /// 
    /// ```sh
    /// $ pulumi import heroku:collaborator/collaborator:Collaborator foobar-collaborator foobar_app:collaborator@foobar.com
    /// ```
    /// </summary>
    [HerokuResourceType("heroku:collaborator/collaborator:Collaborator")]
    public partial class Collaborator : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Heroku app ID (do not use app name)
        /// </summary>
        [Output("appId")]
        public Output<string> AppId { get; private set; } = null!;

        /// <summary>
        /// Email address of the collaborator
        /// </summary>
        [Output("email")]
        public Output<string> Email { get; private set; } = null!;


        /// <summary>
        /// Create a Collaborator resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Collaborator(string name, CollaboratorArgs args, CustomResourceOptions? options = null)
            : base("heroku:collaborator/collaborator:Collaborator", name, args ?? new CollaboratorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Collaborator(string name, Input<string> id, CollaboratorState? state = null, CustomResourceOptions? options = null)
            : base("heroku:collaborator/collaborator:Collaborator", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Collaborator resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Collaborator Get(string name, Input<string> id, CollaboratorState? state = null, CustomResourceOptions? options = null)
        {
            return new Collaborator(name, id, state, options);
        }
    }

    public sealed class CollaboratorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Heroku app ID (do not use app name)
        /// </summary>
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        /// <summary>
        /// Email address of the collaborator
        /// </summary>
        [Input("email", required: true)]
        public Input<string> Email { get; set; } = null!;

        public CollaboratorArgs()
        {
        }
        public static new CollaboratorArgs Empty => new CollaboratorArgs();
    }

    public sealed class CollaboratorState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Heroku app ID (do not use app name)
        /// </summary>
        [Input("appId")]
        public Input<string>? AppId { get; set; }

        /// <summary>
        /// Email address of the collaborator
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        public CollaboratorState()
        {
        }
        public static new CollaboratorState Empty => new CollaboratorState();
    }
}
